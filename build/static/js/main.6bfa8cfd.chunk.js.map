{"version":3,"sources":["Components/ResearchBox.js","Utils/getGeneralPlants.js","Utils/readExcelFile.js","Utils/getPlants.js","Components/BeginResearch.js","Utils/getResearchers.js","Utils/getResearches.js","Components/AddNewResearchBox.js","Components/Home.js","Components/Header.js","Components/Footer.js","Components/ResearchHistory.js","Components/MultiSeriesGraph.js","Utils/getControlPlans.js","Components/ResearchPage.js","Utils/getUsers.js","Components/Login.js","Components/PrivateRoute.js","Router/Router.js","serviceWorker.js","index.js"],"names":["ResearchBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","renderResearch","GotoResearch","bind","assertThisInitialized","setState","react_default","a","createElement","Redirect","to","pathname","research","styles","container","color","status","id","src","image","index_esm","className","onClick","name","description","date","style","Component","getAllGeneralPlants","$","ajax","url","dataType","async","readExcelFile","researchId","cols","rows","Env_control_address","Growth_control_address","Frequency_of_measurement","Frequency_of_upload","intervals","fileIndex","forEach","element","index","Date","getJsDateFromExcel","toLocaleDateString","push","min_Humidity","max_Humidity","light_Per_Day","_unused","Noty","type","layout","text","timeout","show","plant","data","success","error","xhr","err","console","toString","CreatePlantsToResearch","Intervals","BeginResearch","generalPlants","owners","Description","Name","Start_date","End_date","General_plant_id","Number_of_plants","files","goBack","showPlantImage","updateOwner","handleSubmit","uploadFile","saveFile","jsonData","responseJSON","ownersData","map","generalPlant","i","key","owner","event","_this2","target","value","selectedOwner","Id","_this3","Image","e","size","length","includes","ExcelRenderer","resp","log","preventDefault","localStorage","getItem","refs","start_date","end_date","Owners","number_of_plants","Status","Plants_id","newResearch","CreateNewResearch","new_research","_this4","userId","onSubmit","required","ref","placeholder","onChange","handleChange","renderSelectPlantType","min","renderSelectOwners","multiple","AddNewResearchBox","newResearchClick","goToNewResearch","Home","researches","currentResearches","currentIndex","nextProperty","prevProperty","ownerId","plants","plantImg","Components_ResearchBox","dist_default","durationFromNow","history","aria-label","Components_AddNewResearchBox","renderResearches","Header","logout","clear","window","location","href","display","sPath","substring","lastIndexOf","NavLink","activeClassName","innerRef","refCallback","exact","margin-left","FooterPage","ResearchHistory","percentage","researchClick","refresh","handleClick","checkStatus","deleteResearch","fetch","method","then","response","json","confirmAlert","title","message","buttons","label","concat","d","cursor","#","Results","mdbreact","rounded","columns","field","sort","width","striped","responsive","small","searching","start","end","duration","lib","percent","renderTableBody","MultiSeriesGraph","controlPlan","plan","selectedPlant","Humidity","_Humidity","Light","_Light","minHum","maxHum","amt","_unused2","es6","height","margin","top","right","left","bottom","strokeDasharray","tick","fill","dataKey","angle","position","stroke","activeDot","r","ResearchPage","renderSelectPlant","showPlantRecords","showOption","updateEndDate","updateStartDate","stopResearch","uploadFiles","updateResearchControlPlan","is","css","childrenElement","_this$state","statusStyle","margin-right","Components_MultiSeriesGraph","CheckUser","user","Login","checkUserAuth","require","email","password","setItem","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","es_Redirect","from","ReactRouter","Components_Header","path","PrivateRoute_PrivateRoute","Footer","Boolean","hostname","match","ReactDOM","BrowserRouter","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bfa8cfd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router';\r\nimport {FaCog} from 'react-icons/fa';\r\nimport {FaRegCalendarAlt} from 'react-icons/fa';\r\n\r\nclass ResearchBox extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            renderResearch : null\r\n        }\r\n\r\n        this.GotoResearch = this.GotoResearch.bind(this);\r\n    }\r\n\r\n    GotoResearch(){\r\n        this.setState({renderResearch : true});\r\n    }\r\n\r\n    render(){\r\n        if (this.state.renderResearch){\r\n            return (<Redirect to={{\r\n                pathname: '/ResearchPage',\r\n                state: {research :this.props.research} \r\n            }} />)\r\n        }\r\n        const styles = {\r\n            container: {\r\n                color: null\r\n            }\r\n        };\r\n        if (this.props.status == 'Pending'){\r\n            styles.container.color = '#ac6236';\r\n        }\r\n        else{\r\n            styles.container.color = '#36ac4d';\r\n        }\r\n        return(\r\n            <div id=\"researchBox\">\r\n                <img src={this.props.image}></img>\r\n                <div>\r\n                    <FaCog className=\"cogIcon\" onClick={this.GotoResearch}></FaCog>\r\n                    <h5>{this.props.name}</h5>\r\n                    <article>{this.props.description}</article>\r\n                    <p className=\"from-row\">\r\n                        <FaRegCalendarAlt className=\"icons\"></FaRegCalendarAlt>\r\n                        <time>{this.props.date}</time>\r\n                    </p>\r\n                    <h6 style={styles.container}>{this.props.status}</h6>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default ResearchBox;","import $ from \"jquery\";\r\n\r\nexport function getAllGeneralPlants() {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/GeneralPlant/\",\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\nexport function getGeneralPlansByID(id) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/GeneralPlant/GetGeneralPlantById?id=\" + id,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\n\r\n\r\n","import {getJsDateFromExcel} from 'excel-date-to-js';\r\nimport {CreatePlantsToResearch} from '../Utils/getPlants';\r\nimport Noty from 'noty';\r\n\r\n\r\nexport function readExcelFile(researchId,cols,rows){\r\n\r\n    var Env_control_address,Growth_control_address,Frequency_of_measurement,Frequency_of_upload = null;\r\n\r\n    let intervals = [];\r\n    let fileIndex= null;\r\n    try{\r\n        rows.forEach((element,index)=> {\r\n            fileIndex = index;\r\n            switch(index){\r\n                case 0:\r\n                    Env_control_address = element[1];\r\n                    break;\r\n                case 1:\r\n                    Growth_control_address = element[1];\r\n                    break;\r\n                case 2:\r\n                    Frequency_of_measurement = element[1];\r\n                    break;\r\n                case 3:\r\n                    Frequency_of_upload = element[1];\r\n                    break;\r\n                case 4:\r\n                    break;\r\n                default:\r\n                    let date = new Date(getJsDateFromExcel(element[0])).toLocaleDateString();\r\n                    element[0] = date;\r\n                    intervals.push({\r\n                        'date':element[0],\r\n                        'min_Humidity': element[1],\r\n                        'max_Humidity': element[2],\r\n                        'light_Per_Day': element[3]\r\n                    });\r\n                    break;\r\n            }             \r\n        });\r\n    }\r\n\r\n    catch{ \r\n        new Noty({\r\n            type: 'error',\r\n            layout: 'topRight',\r\n            text: 'There was an error with file ' + fileIndex + ',plant not created!',\r\n            timeout: 3000\r\n        }).show();\r\n\r\n        return null;\r\n    }\r\n\r\n    // dates.forEach(date=>{\r\n    //     date = new Date(date).toLocaleDateString();\r\n    // })\r\n    //console.log('dates:', dates);\r\n    //console.log(intervals);\r\n\r\n    var plant = {\r\n        Env_control_address : Env_control_address,\r\n        Growth_control_address : Growth_control_address,\r\n        Frequency_of_measurement : Frequency_of_measurement,\r\n        Frequency_of_upload : Frequency_of_upload,\r\n        Intervals : intervals\r\n    }\r\n    CreatePlantsToResearch(researchId,plant);\r\n\r\n    return true;\r\n}","import $ from \"jquery\";\r\n\r\nexport function getAllPlants() {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Research/\",\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\nexport function GetPlantById(id) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Plant/GetPlantById?id=\" + id,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\nexport function CreateNewPlant(plant) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Plant/Create\",\r\n    dataType: 'json',\r\n    type: 'POST',\r\n    data: plant,\r\n    success: function(data) {\r\n    },\r\n    error: function(xhr, status, err) {\r\n      console.error(status, err.toString());\r\n    }.bind(this)\r\n  });\r\n}\r\n\r\nexport function CreatePlantsToResearch(researchId,plant) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Plant/createPlantAndAddControlPlan\",\r\n    dataType: 'json',\r\n    type: 'POST',\r\n    data: {researchId, plant},\r\n    success: function(data) {\r\n    },\r\n    error: function(xhr, status, err) {\r\n      console.error(status, err.toString());\r\n    }.bind(this)\r\n  });\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from 'react-router';\r\nimport {getAllGeneralPlants} from '../Utils/getGeneralPlants';\r\nimport {getAllResearchers} from '../Utils/getResearchers';\r\nimport {CreateNewResearch} from '../Utils/getResearches';\r\nimport {getResearchByID} from '../Utils/getResearches';\r\nimport { readExcelFile } from \"../Utils/readExcelFile\";\r\nimport {ExcelRenderer} from 'react-excel-renderer';\r\nimport Noty from 'noty';\r\n\r\n\r\nclass BeginResearch extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            generalPlants : [],\r\n            owners : [],\r\n            image : null,\r\n            Description : null,\r\n            Name : null,\r\n            Start_date : null,\r\n            End_date : null,\r\n            General_plant_id : null,\r\n            Number_of_plants : 0,\r\n            files : null,\r\n            goBack: false\r\n        }\r\n        this.showPlantImage = this.showPlantImage.bind(this);\r\n        this.updateOwner    = this.updateOwner.bind(this);\r\n        this.handleSubmit   = this.handleSubmit.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.saveFile = this.saveFile.bind(this);\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        let jsonData = getAllGeneralPlants();\r\n        this.setState({ generalPlants : jsonData.responseJSON});\r\n        let ownersData = getAllResearchers();\r\n        this.setState({owners : ownersData.responseJSON});\r\n    }\r\n\r\n    renderSelectPlantType() {\r\n        const { generalPlants} = this.state;\r\n        if(generalPlants != null){\r\n            return generalPlants.map((generalPlant,i) => {\r\n                return (\r\n                  <option key={i}>{generalPlant.Name}</option>\r\n                )\r\n            });\r\n        }\r\n    }\r\n\r\n    renderSelectOwners() {\r\n        const { owners} = this.state;\r\n        if(owners != null){\r\n            return owners.map((owner,i) => {\r\n                return (\r\n                  <option key={i} type=\"checkbox\">{owner.Name}</option>\r\n                )\r\n            }); \r\n        }\r\n    }\r\n\r\n    updateOwner(event){       \r\n        this.state.owners.map(owner =>{\r\n            if(owner.Name == event.target.value){\r\n                this.setState({selectedOwner : owner.Id});\r\n            }\r\n        })\r\n    }\r\n\r\n    showPlantImage(event) {\r\n        this.state.generalPlants.map(plant=>{\r\n            if(plant.Name == event.target.value){\r\n                this.setState({image : plant.Image});\r\n                this.setState({General_plant_id : plant.Id});\r\n            }\r\n        })\r\n    }\r\n\r\n    saveFile(e){\r\n        this.setState({files : e.target.files});\r\n    }\r\n\r\n    uploadFile(researchId,files){\r\n        let size = files.length;\r\n        for(var i = 0 ; i < size; i++){\r\n            if(files[i].name.includes('.xlsx')){\r\n                ExcelRenderer(files[i], (err, resp) => {\r\n                    if(err){\r\n                        console.log(err);            \r\n                    }\r\n                    else{\r\n                        return readExcelFile(researchId,resp.cols,resp.rows);\r\n                    }\r\n                });\r\n            }\r\n        }    \r\n    }\r\n\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let owners = [];\r\n        if(this.state.selectedOwner){\r\n            owners = [localStorage.getItem('userId'),this.state.selectedOwner];\r\n        }\r\n        else{\r\n            owners = [localStorage.getItem('userId')];\r\n        }\r\n        let research = {\r\n            Name : this.refs.name.value,\r\n            Description : this.refs.description.value,\r\n            Start_date : this.refs.start_date.value,\r\n            End_date : this.refs.end_date.value,\r\n            Owners : owners,\r\n            Number_of_plants : this.refs.number_of_plants.value,\r\n            General_plant_id : this.state.General_plant_id,\r\n            Status : \"Pending\",\r\n            Plants_id : []\r\n        };\r\n\r\n            try{\r\n                // creating new research\r\n                let newResearch = (CreateNewResearch(research)).responseJSON;\r\n                research.Id = newResearch.Id;\r\n                // creating research plants and control Plan\r\n                this.uploadFile(research.Id,this.state.files);\r\n\r\n                var new_research = (getResearchByID(research.Id)).responseJSON;\r\n\r\n                console.log('final research',new_research);\r\n\r\n                new Noty({\r\n                    type: 'success',\r\n                    layout: 'topRight',\r\n                    text: 'Research Successfully created',\r\n                    timeout: 3000\r\n                }).show();\r\n                this.setState({research :new_research});\r\n            }\r\n            catch{ \r\n                new Noty({\r\n                    type: 'error',\r\n                    layout: 'topRight',\r\n                    text: 'Research was not created!',\r\n                    timeout: 3000\r\n                }).show();\r\n            }       \r\n    }\r\n\r\n\r\n    render(){\r\n        if (this.state.research){\r\n            return (<Redirect to={{\r\n                pathname: '/ResearchPage',\r\n                state: {research :this.state.research} \r\n            }} />)\r\n        }\r\n\r\n        else if(this.state.goBack){\r\n            return (<Redirect to={{\r\n                pathname: '/Home',\r\n                state: {userId :localStorage.getItem('userId')} \r\n            }} />)\r\n        }\r\n\r\n        return (\r\n            <div id=\"beginResearch\">\r\n                <h1>Create New Research</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <input type=\"text\" required className=\"form-control\" ref=\"name\" placeholder=\"Research Name\"></input>\r\n                        </div>   \r\n                        <img src={this.state.image}></img>\r\n                        <div id=\"textarea\" className=\"form-group\">\r\n                            <textarea required onChange={this.handleChange} className=\"form-control\" rows=\"5\" ref=\"description\" placeholder=\"Description\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"secondDiv\">            \r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group\">\r\n                                <label>Plant Type</label>\r\n                                <select id=\"plantType\" required onChange={this.showPlantImage} className=\"form-control\">\r\n                                    <option></option>\r\n                                    {this.renderSelectPlantType()}\r\n                                </select>                    \r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Number of Plants</label>\r\n                                <input type=\"number\" required className=\"form-control\" min='1' ref=\"number_of_plants\" placeholder=\"Number Of Plants\"></input>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Start Date</label>\r\n                                <input type=\"date\" required className=\"form-control date\" ref=\"start_date\" placeholder=\"Start Date\"></input>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group\">\r\n                                <label>Add Owners</label>\r\n                                <select className=\"form-control\" onChange={this.updateOwner}>\r\n                                    <option></option>\r\n                                    {this.renderSelectOwners()}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>End Date</label>\r\n                                <input type=\"date\" required className=\"form-control date\" ref=\"end_date\" placeholder=\"End Date\"></input>\r\n                            </div>\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"uploadFile\">\r\n                        <label>Upload Control Plan Files:</label>\r\n                        <input className=\"fileBox\" type=\"file\" multiple=\"multiple\" required onChange={(e)=>this.saveFile(e)} ref=\"file\"></input>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <div className=\"col-sm-10\">\r\n                            <button id=\"goBack\" onClick={()=>this.setState({goBack: true})} className=\"btn\">Back</button>\r\n                            <button type=\"submit\" className=\"btn\">Create</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default BeginResearch;","import $ from \"jquery\";\r\n\r\nexport function getAllResearchers() {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Researcher/\",\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\nexport function getResearcherById(id) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Researcher/GetResearcherById?id=\" + id,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\n\r\nexport function getResearcherByEmail(email) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Researcher/GetResearcherByEmail?email=\" + email,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}","import $ from \"jquery\";\r\n\r\nexport function getAllResearches() {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Research/\",\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\nexport function getResearchByID(id) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Research/GetResearchById?id=\" + id,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\nexport function GetResearchesByOwner(ownerId) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Research/GetResearchesByOwner?ownerId=\" + ownerId,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\nexport function CreateNewResearch(research) {\r\n  return $.ajax({\r\n    url: \"https://plantgrowthsystembackend.azurewebsites.net/Research/Create\",\r\n    dataType: 'json',\r\n    type: 'POST',\r\n    data: research,\r\n    async: false,\r\n    success: function(data) {\r\n    },\r\n    error: function(xhr, status, err) {\r\n      console.error(status, err.toString());\r\n    }.bind(this)\r\n  });\r\n}\r\n\r\nexport function GetResearchPlants(researchId) {\r\n  return $.ajax({\r\n    url: `https://plantgrowthsystembackend.azurewebsites.net/Research/GetResearchPlants?researchId=${researchId}`,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\n\r\nexport function AddPlantToResearch(researchId,plantId) {\r\n  return $.ajax({\r\n    url: `https://plantgrowthsystembackend.azurewebsites.net/Research/AddPlantToResearch?researchId=${researchId}&plantId=${plantId}`,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  });\r\n}\r\n\r\n\r\nexport function StopOrContinueResearch(researchId,status){\r\n  return $.ajax({\r\n    url: `https://plantgrowthsystembackend.azurewebsites.net/Research/StopOrContinueResearch?id=${researchId}&status=${status}`,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  })\r\n}\r\n\r\nexport function DeleteResearch(researchId){\r\n  return $.ajax({\r\n    url: `https://plantgrowthsystembackend.azurewebsites.net/Research/Delete?id=${researchId}`,\r\n    dataType: \"json\", // type of data we're expecting from server\r\n    async: false // make true to avoid waiting for the request to be complete\r\n  })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { Route, Redirect } from 'react-router';\r\nimport {BeginResearch} from './BeginResearch';\r\n\r\nclass AddNewResearchBox extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            renderResearch : null\r\n        }\r\n\r\n        this.newResearchClick = this.newResearchClick.bind(this);\r\n    }\r\n\r\n    newResearchClick(){\r\n        this.setState({goToNewResearch : true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.goToNewResearch == true){\r\n            return (<Redirect to={{\r\n                pathname: '/BeginResearch',\r\n                state: {userId :this.props.userId} \r\n            }} />)\r\n        }\r\n        return(\r\n            <div id=\"researchBox\">\r\n                <div onClick={this.newResearchClick} className=\"plus\">\r\n                    <h3>+</h3>\r\n                </div>\r\n                <div>\r\n                    <h5>Create New Research</h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default AddNewResearchBox;","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from 'react-router';\r\nimport Moment from 'react-moment';\r\nimport ResearchBox from './ResearchBox';\r\nimport AddNewResearch from './AddNewResearchBox';\r\nimport {GetResearchesByOwner} from '../Utils/getResearches';\r\nimport {getAllGeneralPlants} from '../Utils/getGeneralPlants';\r\nimport {FaArrowRight, FaArrowLeft, FaSearch} from 'react-icons/fa';\r\n\r\nclass Home extends Component{\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state ={\r\n            researches : [],\r\n            generalPlants : [],\r\n            currentResearches : [],\r\n            currentIndex : 0\r\n        }\r\n\r\n        this.nextProperty = this.nextProperty.bind(this);\r\n        this.prevProperty = this.prevProperty.bind(this);\r\n    }\r\n\r\n  \r\n    nextProperty(){\r\n        if(this.state.currentIndex < this.state.researches.length){\r\n            this.setState({currentIndex: this.state.currentIndex +1});\r\n        }\r\n        else{\r\n            this.setState({currentIndex: 0});\r\n            \r\n        }\r\n        console.log('newIndex:',this.state.currentIndex);\r\n\r\n    }\r\n\r\n    prevProperty(){\r\n        if(this.state.currentIndex > 0){\r\n            this.setState({currentIndex: this.state.currentIndex -1});\r\n        }\r\n\r\n        else{\r\n            this.setState({currentIndex: this.state.researches.length});\r\n        }\r\n        console.log('newIndex:',this.state.currentIndex);\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        var userId = localStorage.getItem('userId');\r\n        let jsonData = {};\r\n        try{\r\n            jsonData = GetResearchesByOwner(userId);\r\n\r\n        }\r\n        catch{}\r\n        this.setState({ researches : jsonData.responseJSON, userId:userId});\r\n        let plants = getAllGeneralPlants();\r\n        this.setState({generalPlants : plants.responseJSON}); \r\n    }\r\n\r\n    renderResearches() {\r\n        let plantImg = \"\";\r\n        const { researches} = this.state;\r\n        if(researches != null){\r\n            return researches.map((research, index) => {\r\n                this.state.generalPlants.map((plant,i) =>{\r\n                    if(plant.Id == research.General_plant_id){\r\n                        plantImg = plant.Image;\r\n                    }\r\n                })\r\n\r\n                // printing just 3 boxes on page\r\n                if(!((index >= this.state.currentIndex * 3) && (index < this.state.currentIndex * 3 +3))){\r\n                    return;\r\n                }\r\n                return (\r\n                    <ResearchBox key={index} name={research.Name} \r\n                            description={research.Description} \r\n                            status={research.Status}\r\n                            image={plantImg}\r\n                            date={ <Moment date={research.Start_date} \r\n                            durationFromNow></Moment>}\r\n                            research = {research}\r\n                    />\r\n                )\r\n                \r\n            });\r\n        }   \r\n      }\r\n    \r\n    render(){       \r\n\r\n        if(this.state.renderResearch){\r\n            this.props.history.push(`/ResearchPage`);\r\n        }\r\n        const style ={\r\n            'color':'#f1f1f1'\r\n        }\r\n        return (       \r\n            <div id=\"dashboard\">\r\n                <div className=\"input-group md-form form-sm form-2 pl-0\">\r\n                    <input className=\"form-control my-0 py-1 red-border\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n                    <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text red lighten-3\" id=\"basic-text1\"><FaSearch/></span>\r\n                    </div>\r\n                </div>                     \r\n                <div id=\"boxes\">\r\n                    <a onClick={this.prevProperty} className=\"previous round\"><FaArrowLeft style={style} size='30'/></a>\r\n                    <AddNewResearch userId={this.state.userId}></AddNewResearch>\r\n                    {this.renderResearches()}\r\n                    <a onClick={this.nextProperty} className=\"next round\"><FaArrowRight style={style}size='30'/></a>\r\n                </div>\r\n            </div>\r\n        )};\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Route, Redirect }  from 'react-router';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {FaSignOutAlt} from 'react-icons/fa';\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            logout: false\r\n        }\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n    logout(){\r\n        console.log('logout');\r\n        localStorage.clear();\r\n        this.setState({logout:true});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.logout == true){\r\n            window.location.href = '/';\r\n        }\r\n\r\n        const styles = {\r\n            container :{\r\n                display: 'none'\r\n            }     \r\n        };\r\n\r\n        if(localStorage.getItem('userId')){\r\n            styles.container.display = 'block'\r\n        }\r\n\r\n\r\n        let sPath = window.location.pathname;\r\n        var pageName = sPath.substring(sPath.lastIndexOf('/') + 1);\r\n        return (\r\n            <header>\r\n                <nav className=\"navbar navbar-expand-lg\">\r\n                    <a href=\"/Home\" id=\"logo\"></a>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" innerRef={this.refCallback} exact to=\"/Home\"> Home </NavLink><span className=\"sr-only\"></span>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" innerRef={this.refCallback} exact to=\"/BeginResearch\">New Research</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" innerRef={this.refCallback} exact to=\"/ResearchHistory\">Research History</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" exact to=\"/About\">About</NavLink>\r\n                        </li>\r\n                        </ul>\r\n                        <button style={styles.container} id=\"logoutButton\" onClick={this.logout}><FaSignOutAlt/></button>\r\n                        <form className=\"form-inline my-2 my-lg-0\">\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"></input>\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                        </form>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n        \r\nexport default Header;","import React from \"react\";\r\nimport {FaInstagram, FaFacebook, FaTwitter, FaGoogle} from 'react-icons/fa';\r\n\r\nconst style={\r\n    'color': '#ffff',\r\n    'margin-left': '15px'\r\n}\r\n\r\nconst FooterPage = () => {\r\n  return (\r\n    <footer className=\"page-footer font-small pt-4\">\r\n    <div className=\"container-fluid text-center text-md-left\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mt-md-0 mt-3\">\r\n          <h5 className=\"text-uppercase\">Plant Growth System</h5>\r\n          <p>&copy; Shenkar Software Engineering Department</p>\r\n        </div>\r\n        <hr className=\"clearfix w-100 d-md-none pb-3\"></hr>\r\n        <div className=\"col-md-5 mb-md-0 mb-3\">\r\n            <div className=\"form-row\">\r\n              <a href=\"#\"><FaFacebook size='23' style={style}/></a>\r\n              <a href=\"#\"><FaInstagram size='23' style={style}/></a>\r\n              <a href=\"#\"><FaTwitter size='23' style={style}/></a>\r\n              <a href=\"#\"><FaGoogle size='23' style={style}/></a>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default FooterPage;","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from 'react-router';\r\nimport { Progress } from 'react-sweet-progress';\r\nimport \"react-sweet-progress/lib/style.css\";\r\nimport Moment from 'react-moment';\r\nimport {  MDBBtn,MDBDataTable } from 'mdbreact';\r\nimport {FaTrashAlt} from 'react-icons/fa';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {DeleteResearch} from '../Utils/getResearches';\r\n\r\n\r\nclass ResearchHistory extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state ={\r\n            percentage:0,\r\n            researches :[],\r\n            researchClick : false,\r\n            refresh : false\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.checkStatus = this.checkStatus.bind(this);\r\n        this.deleteResearch = this.deleteResearch.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        // let jsonData = GetResearchesByOwner(\"5c48386ae7179a5449418a67\");\r\n        const userId = localStorage.getItem('userId');\r\n        const url = \"https://plantgrowthsystembackend.azurewebsites.net/Research/GetResearchesByOwner?ownerId=\" + userId;\r\n        fetch(url, {\r\n            method: \"GET\"\r\n        }).then(response => response.json()).then(researches=> {\r\n            this.setState({ researches : researches});\r\n        });\r\n        //this.setState({ researches : jsonData.responseJSON});\r\n    }\r\n\r\n    handleClick(index){\r\n        this.setState({researchClick: true, research: this.state.researches[index]});\r\n        return;\r\n    }\r\n\r\n    deleteResearch(index){\r\n        console.log('delete research', this.state.researches[index].Id);\r\n        confirmAlert({\r\n            title: 'Delete Research',\r\n            message: 'Are you sure delete this research?',\r\n            buttons: [\r\n              {\r\n                label: 'Yes',\r\n                onClick: () => {\r\n                    DeleteResearch(this.state.researches[index].Id);\r\n                    this.setState({refresh:true});\r\n                }\r\n              },\r\n              {\r\n                label: 'No',\r\n                onClick: () => {}\r\n              }\r\n            ]\r\n          })\r\n    }\r\n\r\n    renderTableBody() {\r\n        const { researches} = this.state;\r\n        let d = [];\r\n        const style ={\r\n            'cursor' : 'pointer',\r\n            'color': '#db1818'\r\n        }\r\n        if(researches != null){\r\n            researches.map((research,index) => {\r\n                d.push({\r\n                    '#': index,\r\n                    'Name':research.Name,\r\n                    'Description':research.Description,\r\n                    'Status': this.checkStatus(research),\r\n                    'Results': <div><MDBBtn onClick={() => this.handleClick(index)} rounded size=\"sm\">Go To Research</MDBBtn><FaTrashAlt style={style} onClick={()=>this.deleteResearch(index)}/></div>\r\n                })\r\n            });\r\n        }\r\n\r\n        const data = {\r\n            columns: [\r\n            {\r\n                label: '#',\r\n                field: '#',\r\n                sort: 'asc',\r\n                width: 50\r\n            },\r\n            {\r\n                label: 'Name',\r\n                field: 'Name',\r\n                sort: 'asc',\r\n                width: 250\r\n            },\r\n            {\r\n                label: 'Description',\r\n                field: 'Description',\r\n                sort: 'asc',\r\n                width: 250\r\n            },\r\n            {\r\n                label: 'Status',\r\n                field: 'Status',\r\n                sort: 'asc',\r\n                width: 100\r\n            },\r\n            {\r\n                label: 'Results',\r\n                field: 'Results',\r\n                sort: 'asc',\r\n                width: 350\r\n            }\r\n            ],\r\n            rows: d\r\n        };\r\n        \r\n        return (\r\n            <MDBDataTable\r\n                striped\r\n                responsive\r\n                small\r\n                data={data}\r\n                searching={false}\r\n            />\r\n            );\r\n    }\r\n\r\n\r\n    checkStatus(research){\r\n\r\n        switch(research.Status){\r\n            case 'Running':\r\n                var start = new Date(research.Start_date).toLocaleDateString();\r\n                var end = new Date(research.End_date).toLocaleDateString();\r\n                return (<Moment duration={start} date={end}></Moment>)\r\n\r\n            case 'Pending':\r\n                return(<Progress type=\"circle\" width={60} status=\"warning\" />)\r\n\r\n            case 'Complete':\r\n                return(<Progress type=\"circle\" percent={100} width={60} status=\"success\" />)\r\n\r\n            case 'Stop':\r\n                return('Stop');\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { researches} = this.state;\r\n        if (this.state.researchClick === true){\r\n            return (<Redirect to={{\r\n                pathname: '/ResearchPage',\r\n                state: {research :this.state.research} \r\n            }} />)\r\n        }\r\n\r\n        return (\r\n            <div id=\"research_history\">\r\n                <h1>Research History</h1>               \r\n                {this.renderTableBody()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResearchHistory;","import React, { PureComponent, Component } from 'react';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport {getControlPlanByPlantId} from '../Utils/getControlPlans';\r\n\r\n\r\nclass MultiSeriesGraph extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            plants: []\r\n        }\r\n    }   \r\n   \r\n    render() {\r\n        let controlPlan = {};\r\n        let plan = null;\r\n        try{\r\n            plan = this.props.plants[this.props.selectedPlant];\r\n            if(plan){\r\n                controlPlan = (getControlPlanByPlantId(plan.Id)).responseJSON;          \r\n            }\r\n        }\r\n        catch{}\r\n        \r\n        let data = [];\r\n\r\n        if(plan != null && plan.Humidity){\r\n            const size = plan.Humidity.length;\r\n            for(let i=0; i < size ; ++i ){\r\n                var date = new Date(plan.Humidity[i].Date).toLocaleDateString();\r\n                try{\r\n                    if(date >= this.props.start_date && date <= this.props.end_date){\r\n                        data.push({Date: plan.Humidity[i].Date,Humidity: plan.Humidity[i]._Humidity, Light: plan.Light[i]._Light,\r\n                            minHum: controlPlan.Intervals[0].min_Humidity, maxHum:controlPlan.Intervals[0].max_Humidity ,amt: 10});\r\n                    }    \r\n                }\r\n                catch{}\r\n                     \r\n            }\r\n        }\r\n        return (\r\n        <LineChart\r\n            width={1000}\r\n            height={550}\r\n            data={data}\r\n            margin={{\r\n            top: 10, right: 10, left: 10, bottom: 10,\r\n            }}\r\n        >\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis tick={{ fill: '#f8f9fa' }} dataKey=\"Date\" />\r\n            \r\n            <YAxis tick={{ fill: '#f8f9fa' }} label={{ value: 'Index', angle: -90, position: 'insideLeft' }}/>\r\n\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"Light\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\r\n            <Line type=\"monotone\" dataKey=\"Humidity\" stroke=\"#82ca9d\" />\r\n            <Line type=\"monotone\" dataKey=\"minHum\" stroke=\"#dc3545\" />\r\n            <Line type=\"monotone\" dataKey=\"maxHum\" stroke=\"#dc3545\" />\r\n        </LineChart>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default MultiSeriesGraph;\r\n\r\n","import $ from \"jquery\";\r\n\r\n\r\nexport function getControlPlanByPlantId(id) {\r\n    return $.ajax({\r\n      url: \"https://plantgrowthsystembackend.azurewebsites.net/ControlPlan/GetControlPlanByPlantId?plantId=\" + id,\r\n      dataType: \"json\", // type of data we're expecting from server\r\n      async: false // make true to avoid waiting for the request to be complete\r\n    });\r\n  }\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from 'react-router';\r\nimport MultiSeriesGraph from './MultiSeriesGraph';\r\nimport {GetResearchPlants, StopOrContinueResearch} from '../Utils/getResearches';\r\nimport {FaCog, FaTag , FaAlignLeft} from 'react-icons/fa';\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css' \r\nimport {ExcelRenderer} from 'react-excel-renderer';\r\nimport $ from \"jquery\";\r\n\r\nclass ResearchPage extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            plants:[],\r\n            research : {},\r\n            start_date : null,\r\n            end_date : null\r\n        }\r\n        this.renderSelectPlant = this.renderSelectPlant.bind(this);\r\n        this.showPlantRecords  = this.showPlantRecords.bind(this);\r\n        this.showOption        = this.showOption.bind(this);\r\n        this.updateEndDate     = this.updateEndDate.bind(this);\r\n        this.updateStartDate   = this.updateStartDate.bind(this);\r\n        this.stopResearch      = this.stopResearch.bind(this);\r\n        this.saveFile          = this.saveFile.bind(this);\r\n        this.uploadFiles       = this.uploadFiles.bind(this);\r\n        this.updateResearchControlPlan = this.updateResearchControlPlan.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.props.location.state.research){\r\n            try{\r\n                let jsonData = GetResearchPlants(this.props.location.state.research.Id);\r\n\r\n                this.setState({research : this.props.location.state.research});\r\n                this.setState({ plants : jsonData.responseJSON});\r\n                this.setState({\r\n                    start_date: new Date(this.props.location.state.research.Start_date).toLocaleDateString(),\r\n                    end_date: new Date(this.props.location.state.research.End_date).toLocaleDateString()\r\n                });\r\n            }\r\n\r\n            catch{}\r\n            \r\n        }\r\n    }\r\n\r\n    showOption(){\r\n        if( $('.dropdown-content').is(':visible')){\r\n            $('.dropdown-content').css({'display':'none'});  \r\n        }\r\n        else{\r\n            $('.dropdown-content').css({'display':'block'});\r\n        }\r\n    }\r\n\r\n    updateEndDate(e){\r\n        var date = new Date(e.target.value).toLocaleDateString();\r\n        this.setState({end_date : date});\r\n    }\r\n\r\n    updateStartDate(e){\r\n        var date = new Date(e.target.value).toLocaleDateString();\r\n        this.setState({start_date : date});\r\n    }\r\n\r\n    renderSelectPlant() {\r\n        const { plants} = this.state;\r\n        let i = 0;\r\n        if(plants != null){\r\n            return plants.map(plant => {\r\n                ++ i;\r\n              return (\r\n                <option key={i}>{i}</option>\r\n              )\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    updateResearchControlPlan(){\r\n        if(this.state.research.Status == 'Complete' || this.state.research.Status == 'Stop'){\r\n            return;\r\n        }\r\n        console.log('update');\r\n        confirmAlert({\r\n            title: 'please upload xlsx files',\r\n            buttons: [\r\n              {\r\n                label: 'Upload',\r\n                onClick: () => {this.uploadFiles(this.state.research.Id,this.state.files)}\r\n              },\r\n              {\r\n                label: 'Cancel',\r\n                onClick: () => {}\r\n              }\r\n            ],\r\n            childrenElement: () => <input type='file' multiple=\"multiple\" required onChange={(e)=>this.saveFile(e)}></input>,\r\n        })\r\n    }\r\n\r\n    saveFile(e){\r\n        this.setState({files : e.target.files});\r\n    }\r\n\r\n    uploadFiles(researchId,files){\r\n        let size = files.length;\r\n        for(var i = 0 ; i < size; i++){\r\n            if(files[i].name.includes('.xlsx')){\r\n                ExcelRenderer(files[i], (err, resp) => {\r\n                    if(err){\r\n                        console.log(err);            \r\n                    }\r\n                    else{\r\n                        console.log('uploading....');\r\n                    }\r\n                });\r\n            }\r\n        }    \r\n    }\r\n\r\n\r\n    stopResearch(){\r\n        if(this.state.research.Status == 'Complete' || this.state.research.Status == 'Stop'){\r\n            return;\r\n        }\r\n        confirmAlert({\r\n            title: 'Are you sure to stop this research?',\r\n            buttons: [\r\n              {\r\n                label: 'Yes',\r\n                onClick: () => {StopOrContinueResearch(this.state.research.Id,'Stop')}\r\n              },\r\n              {\r\n                label: 'No',\r\n                onClick: () => {}\r\n              }\r\n            ]\r\n        })\r\n        \r\n    }\r\n\r\n    showPlantRecords(event){\r\n        if(event.target.value == 0){\r\n            return;\r\n        }\r\n        this.setState({selectedPlant: event.target.value -1});\r\n    }\r\n\r\n    render(){\r\n        let plant = {};\r\n        const {research , start_date, end_date} = this.state;\r\n        let statusStyle = {};\r\n        try{\r\n            if(this.state.selectedPlant != null){\r\n                plant = this.state.plants[this.state.selectedPlant];\r\n            }\r\n            \r\n            if (plant.status == \"Pending\"){\r\n                statusStyle = {color : '#ac6236'}\r\n            }\r\n    \r\n            else{\r\n                statusStyle = {color : '#36ac4d'}\r\n            }\r\n        }\r\n\r\n        catch{}\r\n\r\n        var style={\r\n            \"display\": 'inline',\r\n            'margin-right': '10px',\r\n            'color': '#ffff'\r\n        }\r\n        return (\r\n            <div id=\"researchPage\">\r\n                <h1>Research Report</h1>\r\n                <div className=\"firstDiv\">\r\n                    <article>                 \r\n                        <h2><FaTag size='20' style={style}/>{research.Name}</h2>\r\n                        {/* <div className=\"line\"></div> */}\r\n                        <h3><FaAlignLeft size='20' style={style} />{research.Description}</h3>\r\n                        {/* <div className=\"line\"></div>.<div className=\"line\"></div> */}\r\n                    </article>\r\n                    <article>\r\n                        <label>Start Date:</label> <label>{research.Start_date}</label><br></br>\r\n                        <label>End Date:</label> <label>{research.End_date}</label>\r\n                    </article>\r\n                    <div className=\"dropdown\">\r\n                        <button onClick={this.showOption} className=\"dropbtn\"><FaCog size='lg'/></button>\r\n                        <div className=\"dropdown-content\">\r\n                            <a href=\"#\" onClick={this.updateResearchControlPlan}>Update Control Plans</a>\r\n                            <a href=\"#\">Link 3</a>\r\n                            <a href=\"#\" onClick={this.stopResearch}>Stop Research</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <br></br><br></br> */}\r\n                <div className=\"researchContent\">\r\n                    <article id=\"plantDetails\">\r\n                        <label>Plant Status:&nbsp;</label><label style={statusStyle}>{plant.Status}</label>\r\n                        <label>Measure cycle: {plant.Frequency_of_measurement} Hours</label>\r\n                        <label>Upload cycle: {plant.Frequency_of_upload} Hours</label>\r\n                        <label>Choose Plant:</label>\r\n                        <div className=\"form-group\">                          \r\n                            <select onChange={this.showPlantRecords} className=\"form-control\">\r\n                                <option value='0'></option>\r\n                                {this.renderSelectPlant()}\r\n                            </select>                    \r\n                        </div>\r\n                    </article>\r\n                    \r\n                    <button>Graph1</button>\r\n                    <button>Graph2</button>\r\n                    <button>Graph3</button>\r\n                    \r\n                    <p>\r\n                        <label>End Date</label>\r\n                        <input type=\"date\" onChange={this.updateEndDate} name=\"end_date\"></input>\r\n                    </p>\r\n                    <p>\r\n                        <label>Start Date</label>\r\n                        <input type=\"date\" onChange={this.updateStartDate} name=\"start_date\"></input>\r\n                    </p>\r\n                    <div className=\"grpah\">\r\n                        <MultiSeriesGraph plants={this.state.plants} \r\n                                      selectedPlant={this.state.selectedPlant}\r\n                                      end_date={this.state.end_date}\r\n                                      start_date={this.state.start_date}\r\n                                      />\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport default ResearchPage;","import $ from \"jquery\";\r\n\r\nexport function CheckUser(user) {\r\n    return $.ajax({\r\n      url: `https://plantgrowthsystembackend.azurewebsites.net/User/CheckUserCredentials`,\r\n      dataType: 'json',\r\n      type: 'POST',\r\n      data: user,\r\n      async: true,\r\n      success: function(data) {\r\n        console.log('success');\r\n      },\r\n      error: function(xhr, status, err) {\r\n        console.log('error');\r\n      }\r\n    });\r\n  }","import React, { Component } from 'react';\r\nimport { Route, Redirect }  from 'react-router';\r\nimport { FaUserAlt } from 'react-icons/fa';\r\nimport {FaLock} from 'react-icons/fa';\r\nimport {CheckUser} from '../Utils/getUsers';\r\nimport Noty from 'noty';\r\n\r\nclass Login extends Component{\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userId : null\r\n        }\r\n        this.checkUserAuth = this.checkUserAuth.bind(this);\r\n    }\r\n\r\n   \r\n    render(){\r\n        if(this.state.userId != null && this.state.userId != 'error'){\r\n            return (<Redirect to={{\r\n                pathname: '/Home',\r\n                state: {userId :this.state.userId} \r\n            }} />)\r\n        }\r\n\r\n        else if(this.state.userId == 'error') {\r\n                new Noty({\r\n                    type: 'error',\r\n                    layout: 'topRight',\r\n                    text: 'Wrong User name or Password',\r\n                    timeout: 3000\r\n                }).show();\r\n        }\r\n\r\n        \r\n        return (\r\n            <div id=\"login\">\r\n                <h1>Login</h1>\r\n                <form onSubmit={this.checkUserAuth}>\r\n                    <article>\r\n                        <label>Email:</label>\r\n                        <div className=\"form-row\">\r\n                            <FaUserAlt className=\"icon\"></FaUserAlt>\r\n                            <input type=\"email\" require className=\"form-control\" ref=\"email\" name=\"email\" placeholder=\"Email\"></input>\r\n                        </div>\r\n                    </article>\r\n                    <article>\r\n                        <label>Password:</label>\r\n                        <div className=\"form-row\">\r\n                            <FaLock className=\"icon\"></FaLock>\r\n                            <input type=\"password\" require className=\"form-control\" ref=\"password\" name=\"password\" placeholder=\"Password\"></input>\r\n                        </div>                        \r\n                    </article>\r\n\r\n                    \r\n                    <button type=\"submit\" className=\"btn btn-primary\">Sign In</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    };\r\n\r\n    async checkUserAuth(event){\r\n        event.preventDefault();\r\n        let user = {\r\n            email : this.refs.email.value,\r\n            password : this.refs.password.value\r\n        };\r\n        try{\r\n            var userId = await CheckUser(user);\r\n            localStorage.setItem('userId', userId);\r\n            this.setState({userId : userId});     \r\n        }\r\n\r\n        catch{\r\n            this.setState({userId : 'error'});   \r\n        }\r\n        \r\n        \r\n    }\r\n}\r\n \r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route \r\n        {...rest} \r\n        render={props => \r\n            localStorage.getItem('userId') ? (\r\n                <Component {...props} />\r\n            )   :\r\n                (<Redirect to={{ \r\n                    pathname: '/Login', \r\n                    state: { from: props.location } \r\n                    }} \r\n                />)\r\n        }\r\n    />\r\n);","import React                                    from \"react\";\r\nimport {Route}                                  from 'react-router-dom';\r\nimport Home                                     from '../Components/Home';\r\nimport Header                                   from '../Components/Header';\r\nimport FooterPage                               from '../Components/Footer';\r\nimport BeginResearch                            from '../Components/BeginResearch';\r\nimport ResearchHistory                          from '../Components/ResearchHistory';\r\nimport ResearchPage                             from '../Components/ResearchPage';\r\nimport Login                                    from '../Components/Login';\r\nimport {PrivateRoute}                           from \"../Components/PrivateRoute\";\r\n\r\n\r\nconst ReactRouter = () =>{\r\n    return (\r\n        // <React.Fragment>\r\n            <div>\r\n                <Header></Header>\r\n                    <Route exact path=\"/Login\" component={Login}></Route>\r\n                    <PrivateRoute exact path=\"/\" component={Home}></PrivateRoute>\r\n                    <PrivateRoute path='/Home' component={Home} name=\"Home\"></PrivateRoute>\r\n                    <PrivateRoute path='/BeginResearch' component={BeginResearch} name=\"Begin Research\"></PrivateRoute>\r\n                    <PrivateRoute path='/ResearchHistory' component={ResearchHistory} name=\"Research History\"></PrivateRoute>\r\n                    <PrivateRoute path='/ResearchPage' component={ResearchPage} name=\"Research Details\"></PrivateRoute>                <FooterPage></FooterPage>                   \r\n            </div>\r\n        // </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ReactRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route} from 'react-router-dom';\nimport './index.css';\nimport ReactRouter from './Router/Router';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport '../node_modules/noty/lib/noty.css';\nimport '../node_modules/noty/lib/themes/mint.css';\n\nReactDOM.render( \n    <Router>\n        <ReactRouter></ReactRouter>\n    </Router>, document.getElementById('root')\n    )\nserviceWorker.unregister();\n"],"sourceRoot":""}